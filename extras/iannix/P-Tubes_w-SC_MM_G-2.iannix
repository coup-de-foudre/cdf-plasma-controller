 /*

Copyright 2018, Michael McCoy <michael.b.mccoy@gmail.com>, and
copyright 2010-2015, IanniX Association.

This file is part of the CdF Plasma Controller.

The CdF Plasma Controller is free software: you can redistribute it and/or
modify it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the License,
or (at your option) any later version.

CdF Plasma Controller is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero
General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with the Cdf Plasma Controller.  If not, see
<http://www.gnu.org/licenses/>.
*/


/*
 *	IanniX Score File
 */


/*
 *	This method is called first.
 *	It is the good section for asking user for script global variables (parameters).
 *
 * 	This section is never overwritten by IanniX when saving.
 */
function askUserForParameters() {
    //title("The title of the parameter box");
    // ask("Group name of the parameter (only for display purposes)", "Parameter label", "myGlobalVar", "theDefaultValue");
}


/*
 *	This method stores all the operations made through IanniX scripts.
 *	You can add some commands here to make your own scripts!
 *	Scripts are written in Javascript but even with a limited knowledge of Javascript, many types of useful scripts can be created.
 *
 *	Beyond the standard javascript commands, the run() function is used to send commands to IanniX.
 *	Commands must be provided to run() as a single string.
 *	For example, run("zoom 100"); sets the display zoom to 100%.
 *
 *	To combine numeric parameters with text commands to produce a string, use the concatenation operator.
 *	In the following example center_x and center_y are in numeric variables and must be concatenated to the command string.
 *	Example: run("setPos current " + center_x + " " + center_y + " 0");
 *
 *	To learn IanniX commands, perform an manipulation in IanniX graphical user interface, and see the Helper window.
 *	You'll see the syntax of the command-equivalent action.
 *
 *	And finally, remember that most of commands must target an object.
 *	Global syntax is always run("<command name> <target> <arguments>");
 *	Targets can be an ID (number) or a Group ID (string name of group) (please see "Info" tab in Inspector panel).
 *	Special targets are "current" (last used ID), "all" (all the objects) and "lastCurve" (last used curve).
 *
 * 	This section is never overwritten by IanniX when saving.
 */
function makeWithScript() {
    //Clears the score
    run("clear");
    //Resets rotation
    run("rotate 0 0 0");
    //Resets score viewport center
    run("center 0 0");
    //Resets score zoom
    run("speed 1");

    var ip_address = "192.168.1.255";

    addTimeline(100, 90, 11, "pwm1", ip_address);
    addTimeline(200, 90, 0, "pwm2", ip_address);
    addTimeline(300, 90, -11, "pwm3", ip_address);
    addTimeline(400, 90, -22, "pwm4", ip_address);
    addTimeline(412, 90, -33, "pwm5", ip_address);
    addTimeline(415, 90, -44, "pwm6", ip_address);
    addTimeline(418, 90, -55, "pwm7", ip_address);
}


function addTimeline(id, length, yOffset, channel, ip_address) {
    var port = 5005;
    var center = length / 2.0;

    run("add curve " + id);
    run("setpos current " + center + " " + yOffset + " 0");
    var points1 = [
        {x: -center, y: yOffset, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
        {x: center, y: yOffset, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0}
    ];
    for(var i = 0 ; i < points1.length ; i++) {
        run("setpointat current " + i + " " + points1[i].x + " " + points1[i].y + " " + points1[i].z + " " + points1[i].c1x + " " + points1[i].c1y + " " + points1[i].c1z + " " + points1[i].c2x + " " + points1[i].c2y + " " + points1[i].c2z);
    }

    // Add a cursor
    run("add cursor auto");
    run("setCurve current lastCurve");
    run("setPos current 0 " + yOffset + " 0");

    // Make x-scale 10:1
    run("setWidth current 20");
    run("setBoundsSourceMode current 3");
    run("setBoundsSource current 0 1 " + yOffset + " " + " " + yOffset + 10 + " 0 1");

    // loop
    run("setPattern current 0 0 1");

    // Set OSC message
    var osc_address = "osc://" + ip_address + ":" + port;
    var endpoint = "/" + channel + "/fine/value collision_value_y";
    run("setmessage current 100, " + osc_address + endpoint);
}


/*
 *	When an incoming message is received, this method is called.
 *		- <protocol> tells information about the nature of message ("osc", "midi", "direct?)
 *		- <host> and <port> gives the origin of message, specially for IP protocols (for OpenSoundControl, UDP or TCP, it is the IP and port of the application that sends the message)
 *		- <destination> is the supposed destination of message (for OpenSoundControl it is the path, for MIDI it is Control Change or Note on/off?)
 *		- <values> are an array of arguments contained in the message
 *	
 * 	This section is never overwritten by IanniX when saving.
 */
function onIncomingMessage(protocol, host, port, destination, values) {
    //Logs a message in the console (open "Config" tab from Inspector panel and see "Message log")
    console("Received on '" + protocol + "' (" + host + ":" + port + ") to '" + destination + "', " + values.length + " values : ");

    //Browses all the arguments and displays them in log window
    for(var valueIndex = 0 ; valueIndex < values.length ; valueIndex++)
        console("- arg " + valueIndex + " = " + values[valueIndex]);
}


/*
 *	This method stores all the operations made through the graphical user interface.
 *	You are not supposed to modify this section, but it can be useful to remove some stuff that you added accidentaly.
 *
 * 	Be very careful! This section is automaticaly overwritten when saving a score.
 */
function madeThroughGUI() {
//GUI: NEVER EVER REMOVE THIS LINE
	run("zoom 1804.1");
	run("rotate 0 0 0");
	run("speed 1");
	run("center 36.4247 -52.6803");


	run("add curve 422");
	run("setpos current -1.12609 -86.9248 0");
	var points422 = [
		{x: 0, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 7.06389, y: -0.252281, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 7.82074, y: 1.93417, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 10.5958, y: 2.10235, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 13.0346, y: -17.7438, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 15.6415, y: -17.8279, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 19.9303, y: -13.2028, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 36.5809, y: -13.0346, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 40.5333, y: 1.85007, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 58.2771, y: 1.76598, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 63.3228, y: -12.8664, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 66.6865, y: -17.4915, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 79.637, y: 1.59779, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 85.86, y: 1.68188, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 87.5418, y: -5.88657, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 92.2511, y: -10.9322, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 100.324, y: -11.0163, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 103.604, y: -16.9029, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 111.509, y: -16.987, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 117.395, y: 1.93417, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 119.918, y: 2.60692, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 125.384, y: 2.69101, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 125.384, y: 2.69101, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
	];
	for(var i = 0 ; i < points422.length ; i++)
		run("setpointat current " + i + " " + points422[i].x + " " + points422[i].y + " " + points422[i].z + " " + points422[i].c1x + " " + points422[i].c1y + " " + points422[i].c1z + " " + points422[i].c2x + " " + points422[i].c2y + " " + points422[i].c2z);

	run("add curve 421");
	run("setpos current -0.537434 -112.826 0");
	var points421 = [
		{x: 0, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 6.22295, y: -0.0840912, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 7.40027, y: 3.02739, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 14.3801, y: 3.02739, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 19.0052, y: -16.8188, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 24.135, y: -17.0711, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 37.4218, y: -17.0711, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 42.5516, y: 1.93417, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 51.2973, y: 1.85007, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 56.4271, y: -16.9029, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 76.4414, y: -17.0711, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 79.7211, y: 3.11148, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 84.7667, y: 3.02739, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 92.3352, y: -16.8188, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 94.5216, y: -16.8188, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 96.7081, y: -12.8664, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 98.1377, y: -16.8188, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 99.8196, y: -10.2595, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 101.586, y: -16.6506, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 114.788, y: -16.4824, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 116.722, y: -0.168182, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 125.132, y: -0.168182, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
	];
	for(var i = 0 ; i < points421.length ; i++)
		run("setpointat current " + i + " " + points421[i].x + " " + points421[i].y + " " + points421[i].z + " " + points421[i].c1x + " " + points421[i].c1y + " " + points421[i].c1z + " " + points421[i].c2x + " " + points421[i].c2y + " " + points421[i].c2z);

	run("add curve 300");
	run("setpos current 60 -11 0");
	var points300 = [
		{x: -60, y: -10.9778, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 60, y: -10.9778, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
	];
	for(var i = 0 ; i < points300.length ; i++)
		run("setpointat current " + i + " " + points300[i].x + " " + points300[i].y + " " + points300[i].z + " " + points300[i].c1x + " " + points300[i].c1y + " " + points300[i].c1z + " " + points300[i].c2x + " " + points300[i].c2y + " " + points300[i].c2z);
	run("setposx current 60");
	run("add cursor 301");
	run("setcurve current lastCurve");
	run("setpos current 0 -21.9778 0");
	run("setwidth current 20");
	run("setboundssourcemode current 3");
	run("setboundssource current 0.000 1.000 -22.000 -12.000 0.000 0.000");
	run("setpattern current 0 0 1");
	run("setmessage current 100, osc://192.168.1.255:5005/pwm3/fine/value collision_value_y ,");
	run("settime current 0");
	run("setlabel current PWM3 -- AKN");


	run("add curve 418");
	run("setpos current 0 -120 0");
	var points418 = [
		{x: 0, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 120, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
	];
	for(var i = 0 ; i < points418.length ; i++)
		run("setpointat current " + i + " " + points418[i].x + " " + points418[i].y + " " + points418[i].z + " " + points418[i].c1x + " " + points418[i].c1y + " " + points418[i].c1z + " " + points418[i].c2x + " " + points418[i].c2y + " " + points418[i].c2z);
	run("add cursor 419");
	run("setcurve current lastCurve");
	run("setpos current 0 -120 0");
	run("setboundssourcemode current 3");
	run("setboundssource current 0.000 1.000 -120.000 -110.000 0.000 0.000");
	run("setwidth current 20");
	run("setpattern current 0 0 1");
	run("setmessage current 100, osc://192.168.1.255:5005/pwm7/fine/value collision_value_y ,");
	run("settime current 0");
	run("setlabel current PWM7 -- SC3");


	run("add curve 400");
	run("setpos current 60 -22 0");
	var points400 = [
		{x: -60, y: -22.0605, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 60, y: -22.0605, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
	];
	for(var i = 0 ; i < points400.length ; i++)
		run("setpointat current " + i + " " + points400[i].x + " " + points400[i].y + " " + points400[i].z + " " + points400[i].c1x + " " + points400[i].c1y + " " + points400[i].c1z + " " + points400[i].c2x + " " + points400[i].c2y + " " + points400[i].c2z);
	run("setposx current 60");
	run("add cursor 401");
	run("setcurve current lastCurve");
	run("setpos current 0 -44.0605 0");
	run("setwidth current 20");
	run("setboundssourcemode current 3");
	run("setboundssource current 0.000 1.000 -44.000 -34.000 1.000 1.000");
	run("setpattern current 0 0 1");
	run("setmessage current 100, osc://192.168.1.255:5005/pwm4/fine/value collision_value_y ,");
	run("settime current 0");
	run("setlabel current PWM4 -- XP");


	run("add curve 415");
	run("setpos current 0 -95 0");
	var points415 = [
		{x: 0, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 120.099, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 120.099, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
	];
	for(var i = 0 ; i < points415.length ; i++)
		run("setpointat current " + i + " " + points415[i].x + " " + points415[i].y + " " + points415[i].z + " " + points415[i].c1x + " " + points415[i].c1y + " " + points415[i].c1z + " " + points415[i].c2x + " " + points415[i].c2y + " " + points415[i].c2z);
	run("add cursor 416");
	run("setcurve current lastCurve");
	run("setpos current 0 -95 0");
	run("setwidth current 20");
	run("setboundssourcemode current 3");
	run("setboundssource current 0.000 1.000 -95.000 -85.000 0.000 0.000");
	run("setpattern current 0 0 1");
	run("setmessage current 100, osc://192.168.1.255:5005/pwm6/fine/value collision_value_y ,");
	run("settime current 0");
	run("setlabel current PWM6 -- SC2");


	run("add curve 100");
	run("setpos current 60 11 0");
	var points100 = [
		{x: -60, y: 10.9733, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 60, y: 10.9733, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
	];
	for(var i = 0 ; i < points100.length ; i++)
		run("setpointat current " + i + " " + points100[i].x + " " + points100[i].y + " " + points100[i].z + " " + points100[i].c1x + " " + points100[i].c1y + " " + points100[i].c1z + " " + points100[i].c2x + " " + points100[i].c2y + " " + points100[i].c2z);
	run("setposx current 60");
	run("add cursor 101");
	run("setcurve current lastCurve");
	run("setpos current 0 21.9733 0");
	run("setwidth current 20");
	run("setboundssourcemode current 3");
	run("setboundssource current 0.000 1.000 22.000 32.000 1.000 1.000");
	run("setpattern current 0 0 1");
	run("setmessage current 100, osc://192.168.1.255:5005/pwm1/fine/value collision_value_y ,");
	run("settime current 0");
	run("setlabel current PWM1 -- XC Suba");


	run("add curve 412");
	run("setpos current 0 -70 0");
	var points412 = [
		{x: 0, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 119.99, y: -0.275, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 119.99, y: -0.275, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
	];
	for(var i = 0 ; i < points412.length ; i++)
		run("setpointat current " + i + " " + points412[i].x + " " + points412[i].y + " " + points412[i].z + " " + points412[i].c1x + " " + points412[i].c1y + " " + points412[i].c1z + " " + points412[i].c2x + " " + points412[i].c2y + " " + points412[i].c2z);
	run("add cursor 413");
	run("setcurve current lastCurve");
	run("setpos current 0 -70 0");
	run("setwidth current 20");
	run("setboundssourcemode current 3");
	run("setboundssource current 0.000 1.000 -70.000 -60.000 0.000 0.000");
	run("setpattern current 0 0 1");
	run("setmessage current 100, osc://192.168.1.255:5005/pwm5/fine/value collision_value_y ,");
	run("settime current 0");
	run("setlabel current PWM5 -- SC1");


	run("add curve 200");
	run("setpos current 60 0 0");
	var points200 = [
		{x: -60, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 60, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
	];
	for(var i = 0 ; i < points200.length ; i++)
		run("setpointat current " + i + " " + points200[i].x + " " + points200[i].y + " " + points200[i].z + " " + points200[i].c1x + " " + points200[i].c1y + " " + points200[i].c1z + " " + points200[i].c2x + " " + points200[i].c2y + " " + points200[i].c2z);
	run("setposx current 60");
	run("add cursor 201");
	run("setcurve current lastCurve");
	run("setpos current 0 0 0");
	run("setwidth current 20");
	run("setboundssourcemode current 3");
	run("setboundssource current 0.000 1.000 0.000 10.000 0.000 1.000");
	run("setpattern current 0 0 1");
	run("setmessage current 100, osc://192.168.1.255:5005/pwm2/fine/value collision_value_y ,");
	run("settime current 0");
	run("setspeed current 1");
	run("setlabel current PWM2 -- AKI");


	run("add curve 411");
	run("setpos current -0.364426 -37.1015 0");
	var points411 = [
		{x: 0, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 4.33966, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 7.25771, y: -16.8349, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 9.35272, y: -14.8895, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 21.4739, y: -14.0665, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 24.1674, y: -16.6853, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 30.228, y: -0.149647, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 42.4988, y: -0.224468, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 47.5118, y: -15.114, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 55.5178, y: -16.7601, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 60.456, y: -10.7743, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 80.4334, y: -13.5427, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 83.3515, y: -1.87054, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 89.4868, y: -4.19002, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 94.4251, y: 0.0748215, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 100.411, y: -2.3943, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 104.376, y: -16.386, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 105.349, y: -15.114, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 110.287, y: -14.0665, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 114.851, y: -16.2363, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 118.443, y: 0.0748215, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 121.361, y: 0.0748215, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 123.306, y: 0.149643, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
	];
	for(var i = 0 ; i < points411.length ; i++)
		run("setpointat current " + i + " " + points411[i].x + " " + points411[i].y + " " + points411[i].z + " " + points411[i].c1x + " " + points411[i].c1y + " " + points411[i].c1z + " " + points411[i].c2x + " " + points411[i].c2y + " " + points411[i].c2z);

	run("add curve 410");
	run("setpos current -0.154076 -15.0458 0");
	var points410 = [
		{x: 0, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 5.22683, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 9.19658, y: -6.02078, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 19.1871, y: -6.02078, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 21.1058, y: -16.6068, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 24.2154, y: -16.6068, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 26.1342, y: -11.9754, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 37.2494, y: -11.9092, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 39.1682, y: -0.0661631, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 41.2192, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 43.2702, y: -6.08694, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 53.79, y: -16.4744, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 62.2588, y: -16.4083, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 68.0811, y: -5.75613, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 76.2191, y: -5.62381, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 78.4025, y: -1.91871, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 93.2228, y: -1.85255, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 98.2512, y: -8.13798, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 103.147, y: -16.5406, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 104.404, y: -16.5406, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 108.176, y: -4.89602, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 115.387, y: -4.82986, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 118.1, y: 0.0661621, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 121.342, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
	];
	for(var i = 0 ; i < points410.length ; i++)
		run("setpointat current " + i + " " + points410[i].x + " " + points410[i].y + " " + points410[i].z + " " + points410[i].c1x + " " + points410[i].c1y + " " + points410[i].c1z + " " + points410[i].c2x + " " + points410[i].c2y + " " + points410[i].c2z);

	run("add curve 409");
	run("setpos current 0.115921 7.9358 0");
	var points409 = [
		{x: 0, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 4.95454, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 8.77911, y: -17.4713, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 10.7783, y: -17.1236, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 40.8533, y: -17.2105, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 43.0264, y: -2.86842, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 44.9386, y: -10.0829, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 67.0168, y: -10.0829, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 68.8422, y: -17.3844, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 99.9602, y: -17.2975, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 103.263, y: 0.782297, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 105.958, y: 0.782297, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 108.826, y: -17.2105, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 114.824, y: -17.0367, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 118.822, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 120.995, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
	];
	for(var i = 0 ; i < points409.length ; i++)
		run("setpointat current " + i + " " + points409[i].x + " " + points409[i].y + " " + points409[i].z + " " + points409[i].c1x + " " + points409[i].c1y + " " + points409[i].c1z + " " + points409[i].c2x + " " + points409[i].c2y + " " + points409[i].c2z);

	run("add curve 408");
	run("setpos current -0.0913734 28.9578 0");
	var points408 = [
		{x: 0, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 4.11894, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 8.11114, y: -16.856, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 12.1667, y: -16.856, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 14.0678, y: -14.0044, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 21.0383, y: -14.0678, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 22.0522, y: -16.2857, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 52.0887, y: -16.4124, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 52.0254, y: -16.2857, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 55.1304, y: -5.0061, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 66.0298, y: -5.0061, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 69.1348, y: -16.2857, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 80.1609, y: -16.2857, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 83.1392, y: -3.04168, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 103.037, y: -2.85157, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 105.191, y: -16.5391, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 118.245, y: -16.4758, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 119.513, y: -0.0633678, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 120.717, y: -0.0633678, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
	];
	for(var i = 0 ; i < points408.length ; i++)
		run("setpointat current " + i + " " + points408[i].x + " " + points408[i].y + " " + points408[i].z + " " + points408[i].c1x + " " + points408[i].c1y + " " + points408[i].c1z + " " + points408[i].c2x + " " + points408[i].c2y + " " + points408[i].c2z);

	run("add curve 423");
	run("setpos current -2.05112 -60.7716 0");
	var points423 = [
		{x: 0, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 7.31618, y: -0.084095, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 8.15712, y: 1.09322, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 10.6799, y: 1.17731, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 12.8664, y: -18.5848, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 16.3983, y: -18.3325, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 21.444, y: -3.95242, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 23.7986, y: -1.68188, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 24.8077, y: -5.55021, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 26.9942, y: -1.59779, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 28.0033, y: -5.29792, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 29.3488, y: -1.4296, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 30.1897, y: -4.96154, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 31.283, y: -1.17732, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 32.3762, y: 1.51369, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 34.3944, y: 1.09322, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 37.1695, y: 0.336376, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 38.515, y: -16.3142, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 38.515, y: -16.3142, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 44.4857, y: -17.3234, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 48.6063, y: 0.504562, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 61.3045, y: 0.084095, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 63.1546, y: -10.1754, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 66.8547, y: -16.987, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 71.1435, y: -16.987, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 72.6572, y: -13.3709, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 75.18, y: -13.0346, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 76.4414, y: -16.9029, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 79.3006, y: -16.7347, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 80.9825, y: 0.925034, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 86.785, y: 0.588657, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 88.7192, y: -11.5209, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 89.8124, y: -16.8188, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 92.3352, y: -16.7347, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 95.7831, y: -1.93416, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 97.2967, y: -9.41853, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 98.8104, y: -1.93416, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 104.108, y: -16.987, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 105.706, y: -16.7347, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 110.92, y: -16.6506, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 113.022, y: 1.00913, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 115.629, y: -1.85007, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 123.618, y: -2.35463, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 123.618, y: -2.35463, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
	];
	for(var i = 0 ; i < points423.length ; i++)
		run("setpointat current " + i + " " + points423[i].x + " " + points423[i].y + " " + points423[i].z + " " + points423[i].c1x + " " + points423[i].c1y + " " + points423[i].c1z + " " + points423[i].c2x + " " + points423[i].c2y + " " + points423[i].c2z);



//GUI: NEVER EVER REMOVE THIS LINE
}


/*
 *	This method stores all the operations made by other softwares through one of the IanniX interfaces.
 *	You are not supposed to modify this section, but it can be useful to remove some stuff that you or a third party software added accidentaly.
 *
 * 	Be very careful! This section is automaticaly overwritten when saving a score.
 */
function madeThroughInterfaces() {
//INTERFACES: NEVER EVER REMOVE THIS LINE
//INTERFACES: NEVER EVER REMOVE THIS LINE
}


/*
 *	This method is called last.
 *	It allows you to modify your hand-drawn score (made through graphical user interface).
 *
 * 	This section is never overwritten by IanniX when saving.
 */
function alterateWithScript() {
}


/*
 *	//APP VERSION: NEVER EVER REMOVE THIS LINE
 *	Made with IanniX 0.9.20
 *	//APP VERSION: NEVER EVER REMOVE THIS LINE
 */



